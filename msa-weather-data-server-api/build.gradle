buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.weather.spring.cloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter-web')
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile ('org.apache.httpcomponents:httpclient:4.5.6')
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.1.1.RELEASE'
    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
	// https://mvnrepository.com/artifact/org.thymeleaf/thymeleaf
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.1.1.RELEASE'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '2.0.2.RELEASE'

	runtimeOnly('mysql:mysql-connector-java')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}
