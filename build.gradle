buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.weather.spring.cloud'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
	mavenCentral()
}


dependencies {
	// https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.7'
	// https://mvnrepository.com/artifact/com.netflix.feign/feign-httpclient
	compile group: 'com.netflix.feign', name: 'feign-httpclient', version: '8.18.0'
	// https://mvnrepository.com/artifact/com.alibaba.fescar/fescar-core
	compile group: 'com.alibaba.fescar', name: 'fescar-all', version: '0.2.2'

	compile project(':msa-weather-city-collection-api')
	compile project(':msa-weather-data-collection-api')
	compile project(':msa-weather-data-server-api')
	compile project(':msa-weather-eureka-server-api')
	compile project(':msa-weather-report-api')
	compile project(':msa-weather-gateway-api')
}
